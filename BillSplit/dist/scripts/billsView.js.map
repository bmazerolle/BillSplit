{"version":3,"file":"billsView.js","sourceRoot":"","sources":["../../src/scripts/billsView.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Summary: gets the net amount a user owes to each group\n * @param purchases\n */\nfunction listGroupNet2(purchases: any) {\n    // Need to add additional filter for date, return an array of \"nets\" grouped by month\n    // NetVals [year][month] = {}\n    const netVals: any = {};\n    for (const purch of purchases.payee) {\n        const purchDate = new Date(purch.date);\n        const month = purchDate.getMonth() + 1;\n        const year = purchDate.getFullYear();\n        if (!netVals[year]) {\n            netVals[year] = {};\n        }\n        if (!netVals[year][month]) {\n            netVals[year][month] = {};\n        }\n        if (!(netVals[year][month][purch.Group.Name])) {\n            netVals[year][month][purch.Group.Name] = {\n                id: purch.Group._id,\n                price: purch.item.Price,\n            };\n        } else {\n            netVals[year][month][purch.Group.Name].price += purch.item.Price;\n        }\n\n    }\n\n    for (const purch of purchases.payer) {\n        const purchDate = new Date(purch.date);\n        const month = purchDate.getMonth() + 1;\n        const year = purchDate.getFullYear();\n        if (!netVals[year]) {\n            netVals[year] = {};\n        }\n        if (!netVals[year][month]) {\n            netVals[year][month] = {};\n        }\n        if (!(netVals[year][month][purch.Group.Name])) {\n            netVals[year][month][purch.Group.Name] = {\n                id: purch.Group._id,\n                price: purch.item.Price,\n            };\n        } else {\n            netVals[year][month][purch.Group.Name].price -= purch.item.Price / purch.Group.Members.length;\n        }\n    }\n    return netVals;\n}\n\n/**\n * Summary: Displays the net values of a bill for a user\n * @param nets\n * @param yearKey\n * @param monthKey\n */\nfunction displayNetValues(nets: any, yearKey: string, monthKey: string) {\n    const monthDictionary = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    for (const key in nets) {\n        if (nets.hasOwnProperty(key)) {\n            const amount = Math.round(100 * nets[key].price) / 100;\n            const id = nets[key].id;\n            const item = document.createElement(\"a\");\n            const date = new Date();\n            $(item).attr(\"class\", \"list-group-item\");\n            $(item).attr(\"id\", \"listItem\");\n            $(item).html(\n                \"<div class='row'>\" +\n                \"<div class='col col-left'>\" +\n                \"<p>\" + key + \"</p>\" +\n                \"</div>\" +\n                \"<div class='col col-right'>\" +\n                \"<p class='big-price'>$ \" + amount.toFixed(2) + \"</p>\" +\n                \"</div>\" +\n                \"</div>\" +\n                \"<div class='row sub-row'>\" +\n                \"<div class='col col-left'>\" +\n                \"<p>\" + monthDictionary[+monthKey - 1] + \" \" + yearKey + \"</p>\" +\n                \"</div>\" +\n                \"</div>\");\n            $(\"#billStatus\").append(item);\n        }\n    }\n}\n/**\n * Summary: takes the net amount a user owes and displays in on the screen\n * @param allPurchases\n */\nfunction sortNets(allPurchases: any) {\n    // Now that it's organized by month/year, display the current month, display past months on other tab\n    const curDate = new Date();\n    const curMonth = curDate.getMonth() + 1;\n    const curYear = curDate.getFullYear();\n    for (const yearKey in allPurchases) {\n        if (allPurchases.hasOwnProperty(yearKey)) {\n            for (const monthKey in allPurchases[yearKey]) {\n                if (allPurchases[yearKey].hasOwnProperty(monthKey)) {\n                    if (!(+yearKey === curYear && +monthKey === curMonth)) {\n                        displayNetValues(allPurchases[yearKey][monthKey], yearKey, monthKey);\n                    }\n                }\n            }\n        }\n    }\n}\n\n/**\n * Summary: Gets the bill of a given user\n */\nfunction getUserBills2() {\n    $.ajax({\n        data: $(\"#userId\").serialize(),\n        success: (result) => {\n            const nets = listGroupNet2(result);\n            sortNets(nets);\n        },\n        type: \"GET\",\n        url: \"/user/bills/purchases\",\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    getUserBills2();\n});\n"]}