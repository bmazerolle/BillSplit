{"version":3,"file":"groupHome.js","sourceRoot":"","sources":["../../src/scripts/groupHome.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Summary: Connect the page loading to the group in the url\n */\nfunction getGroup() {\n    $.ajax({\n        data: $(\"#groupId\").serialize(),\n        success: (result) => {\n            for (const member of result.group.UserOs) {\n                $(\"#names\").append(member.Name + \", \");\n            }\n            // @ts-ignore\n            $(\"#names\").html($(\"#names\").text().slice(0, -2));\n        },\n        type: \"GET\",\n        url: \"/group\",\n    });\n}\n\n/**\n * Gets this months information and display the range its in\n */\nfunction getPeriod() {\n    const month = [];\n    month[0] = \"Jan \";\n    month[1] = \"Feb \";\n    month[2] = \"Mar \";\n    month[3] = \"Apr\";\n    month[4] = \"May \";\n    month[5] = \"Jun \";\n    month[6] = \"Jul \";\n    month[7] = \"Aug \";\n    month[8] = \"Sept \";\n    month[9] = \"Oct \";\n    month[10] = \"Nov \";\n    month[11] = \"Dec \";\n    const date = new Date();\n    const firstDate = new Date(date.getFullYear(), date.getMonth(), 1);\n    const lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    $(\"#period\").html(month[firstDate.getMonth()] + firstDate.getDate() + \" - \"\n        + month[firstDate.getMonth()] + lastDate.getDate());\n}\n\n/**\n * Summary: Connects the group leave button to teh /user/group/remove endpoint\n */\nfunction userLeaveGroup() {\n    $.ajax({\n        data: $(\"#groupId\").serialize() + \"&\" + $(\"#userId\").serialize() + \"&\" + $(\"#userName\").serialize(),\n        error: (xhr, ajaxOptions, thrownError) => {\n            alert(xhr.status);\n            alert(thrownError);\n        },\n        method: \"POST\",\n        success: ((result) => {\n            window.location.replace(\"/group/view?user=\" + $(\"#userName\").val());\n        }),\n        url: \"/user/group/remove\",\n    });\n}\n\n/**\n * Summary: Connects the leave group button to teh /group/leave endpoint\n */\nfunction leaveGroup() {\n    $(\"#leaveGroupDiv\").on(\"shown.bs.modal\",  () => {\n        $(\"#leave-group\").trigger(\"focus\");\n    });\n    $(\"#group-leave-submit\").on(\"click\", () => {\n        $.ajax({\n            data: $(\"#groupId\").serialize() + \"&\" + $(\"#userId\").serialize(),\n            error: (xhr, ajaxOptions, thrownError) => {\n                alert(xhr.status);\n                alert(thrownError);\n            },\n            method: \"POST\",\n            success: ((result) => {\n                userLeaveGroup();\n            }),\n            url: \"/group/member/remove\",\n        });\n    });\n}\n\n/**\n * Summary: graphs a set of points by adding common dates together\n * @param points\n * @param graphName\n */\nasync function graphPurchases(points: any, graphName: string) {\n    const date = new Date();\n    const yVals: number[] = new Array(new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()).fill(0);\n    const days: string[] = new Array(new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate());\n\n    for (let i = 1; i < days.length + 1; i += 1) {\n        days[i - 1] = \"\" + i;\n    }\n    for (const point of points) {\n        yVals[point.x] += point.y;\n    }\n    const frame = $(graphName);\n    // @ts-ignore\n    const graph = new Chart(frame, {\n        data: {\n            datasets: [{\n                data: yVals,\n                label: \"Spending this month\",\n            }],\n            labels: days,\n        },\n        type: \"line\",\n    });\n}\n\n/**\n * Summary: Formats purchase and lists them on the page\n * @param purchases\n */\nasync function listGroupPurchases(purchases: any, limit: number = 0) {\n    purchases.sort((a: any, b: any) => {\n        if (a.date > b.date) {\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n    let i = 0;\n    for (const purch of purchases) {\n        // List item\n        const item = document.createElement(\"a\");\n        $(item).attr(\"class\", \"list-group-item list-group-item-action\");\n        $(item).html(\"<p><b>\" + purch.Payee.Name + \" : </b> Added \" + purch.quantity + \" \" + purch.item.Name\n            + \" for $\" + purch.item.Price + \" for \" + getInterval(purch) + \" intervals</p><div style='right-align'>\" +\n            purch.date.toString().substr(0, 10) + \"</div>\");\n        $(\"#purchaseList\").append(item);\n        i += 1;\n        if (limit !== 0 && i >= limit) {\n            break;\n        }\n    }\n}\n\n/**\n * Creates bar graph for group's user spending\n * @param purchases\n */\nasync function barGraph(purchases: any) {\n    const points: any = {};\n    for (const purch of purchases) {\n        if (points[purch.Payee.Name] === undefined) {\n            points[purch.Payee.Name] = purch.price * purch.quantity;\n        } else {\n            points[purch.Payee.Name] += purch.price * purch.quantity;\n        }\n    }\n    const names: string[] = [];\n    const yVals: number[] = [];\n\n    // tslint:disable-next-line:forin\n    for (const name in points) {\n        names.push(name);\n        yVals.push(points[name]);\n    }\n\n    const frame = $(\"#barGraph\");\n    // @ts-ignore\n    const graph = new Chart(frame, {\n        data: {\n            datasets: [{\n                data: yVals,\n                label: \"Spending this month per person\" }],\n            labels: names,\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true } } ] } },\n        type: \"bar\",\n    });\n}\n\n/**\n * Summary: adds all of the purchases of a group's prices together\n * @param purchases\n */\nasync function groupTotal(purchases: any) {\n    let total = 0;\n    for (const purch of purchases) {\n        total += purch.price;\n    }\n    $(\"#groupTotal\").html(\"Total spending this month: <b><u>$\" + Math.round(total * 100) / 100 + \"</u></b>\");\n}\n\n/**\n * Summary: Gets a set of a groups purchases and formats them to be graphed\n */\nfunction getGroupPurchases() {\n    $.ajax({\n        data: $(\"#groupId\").serialize(),\n        error: (xhr, ajaxOptions, thrownError) => {\n            alert(xhr.status);\n            alert(thrownError);\n        },\n        method: \"GET\",\n        success: ((results) => {\n            groupTotal(results)\n                .catch((err) => {\n                    $(\"#groupTotal\").html(\"Could not find spending for this month\");\n                });\n            listGroupPurchases(results)\n                .catch((err) => {\n                    $(\"#listingError\").html(\"Could not calculate spending forecast\");\n                });\n            barGraph(results)\n                .catch((err) => {\n                    $(\"#memberSpendingError\").html(\"Could not calculate spending forecast\");\n                });\n            const date = new Date();\n            const points: any = [];\n            for (const purch of results) {\n                let dayWFreq = 0;\n                const purchDate = new Date(purch.date).getDate();\n                // Account Frequencies are used for foresting spending, the date object is used to get the last day\n                // in the month\n                while (dayWFreq + purchDate < new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()) {\n                    points.push({x: purchDate + dayWFreq, y: purch.item.Price * purch.quantity});\n                    dayWFreq += purch.frequency;\n                    if (purch.frequency === 1) {\n                        break;\n                    }\n                }\n            }\n            graphPurchases(points, \"#purchaseGraph\")\n                .catch((err) => {\n                    $(\"#forecastError\").html(\"Could not calculate spending forecast\");\n                });\n        }),\n        url: \"/group/bills/purchases\",\n    });\n}\n\n/**\n * Summary: script ran after content is loaded\n */\nif (document.URL.includes(\"group/home\")) {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        getGroup();\n        getPeriod();\n        leaveGroup();\n        getGroupPurchases();\n        $(() => {\n            // @ts-ignore\n            $(\"#help\").popover();\n        });\n    });\n}\n"]}