{"version":3,"file":"mongo-user.test.js","sourceRoot":"","sources":["../../src/tests/mongo-user.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA4C;AAC5C,IAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC;AAC7C,wDAAgC;AAChC,+DAA4D;AAC5D,qBAAmB;AAEnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAEvB,QAAQ,CAAC,SAAS,EAAE;IAChB,IAAI,CAAC,qCAAqC,EAAE;;;YAElC,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC;YAC7C,GAAG,GAAG,2BAA2B,CAAC;YAClC,MAAM,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YACzD,IAAI,GAAG,IAAI,+BAAc,EAAE,CAAC;YAClC,cAAc;YACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACrB,gBAAgB;YAChB,mBAAO,CAAC,GAAG,CAAC;iBACP,IAAI,CAAC,SAAS,CAAC;iBACf,IAAI,CAAC,IAAI,CAAC;iBACV,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG;gBACV,IAAI,GAAG,EAAE;oBAAE,OAAO,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC9B,CAAC,CAAC,CAAC;YACP,4BAA4B;YAC5B,MAAM,CAAC,OAAO,CAAC,UAAC,GAAU;gBACtB,IAAM,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACpD,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;;;SACN,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import appModule = require(\"../../src/app\");\nconst app = appModule.Server.bootstrap().app;\nimport request from \"supertest\";\nimport {UserController} from \"../controller/UserController\";\nimport \"../enviro\";\n\njest.setTimeout(10000);\n\ndescribe(\"Test db\", () => { // Tests that users can be added to db\n    test(\"Tests that users can be added to db\", async () => {\n        // start db\n        const MongoClient = require(\"mongodb\").MongoClient;\n        const uri = \"mongodb://localhost:27017\";\n        const client = new MongoClient(uri, { useNewUrlParser: true });\n        const user = new UserController();\n        // make a user\n        user.addEmail(\"user@email.com\");\n        user.addUserName(\"UserName\");\n        user.addPassword(\"Pass\");\n        user.addName(\"User\");\n        // post the user\n        request(app)\n            .post(\"/create\")\n            .send(user)\n            .end((err, res) => {\n                if (err) { return (err); }\n            });\n        // expect the user in the db\n        client.connect((err: Error) => {\n            const users = client.db(\"test\").collection(\"users\");\n            expect(users !== null);\n            client.close();\n        });\n    });\n});\n"]}