{"version":3,"file":"mongo-item.test.js","sourceRoot":"","sources":["../../src/tests/mongo-item.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA4C;AAC5C,IAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC;AAC7C,wDAAgC;AAChC,+DAA4D;AAC5D,qBAAmB;AAEnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAEvB,QAAQ,CAAC,SAAS,EAAE;IAChB,IAAI,CAAC,cAAc,EAAE;;;YAEX,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC;YAC7C,GAAG,GAAG,2BAA2B,CAAC;YAClC,MAAM,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YAEzD,IAAI,GAAG,IAAI,+BAAc,EAAE,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpB,gBAAgB;YAChB,mBAAO,CAAC,GAAG,CAAC;iBACP,IAAI,CAAC,YAAY,CAAC;iBAClB,IAAI,CAAC,IAAI,CAAC;iBACV,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG;gBACV,IAAI,GAAG,EAAE;oBAAE,OAAO,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC9B,CAAC,CAAC,CAAC;YACP,yBAAyB;YACzB,MAAM,CAAC,OAAO,CAAC,UAAC,GAAU;gBACtB,IAAM,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACpD,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;;;SACN,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import appModule = require(\"../../src/app\");\nconst app = appModule.Server.bootstrap().app;\nimport request from \"supertest\";\nimport {ItemController} from \"../controller/ItemController\";\nimport \"../enviro\";\n\njest.setTimeout(20000);\n\ndescribe(\"Test db\", () => { // tests that items can be added to the db\n    test(\"Test inserts\", async () => {\n        // start the db\n        const MongoClient = require(\"mongodb\").MongoClient;\n        const uri = \"mongodb://localhost:27017\";\n        const client = new MongoClient(uri, { useNewUrlParser: true });\n        // make an item\n        const item = new ItemController();\n        item.addName(\"TV\");\n        item.addPrice(1000);\n        // send the item\n        request(app)\n            .post(\"/items/add\")\n            .send(item)\n            .end((err, res) => {\n                if (err) { return (err); }\n            });\n        // check if item is in db\n        client.connect((err: Error) => {\n            const items = client.db(\"test\").collection(\"items\");\n            expect(items !== null);\n            client.close();\n        });\n    });\n});\n"]}