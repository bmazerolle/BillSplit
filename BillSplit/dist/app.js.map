{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport bodyParser from \"body-parser\";\nimport cookieParser from \"cookie-parser\";\nimport errorHandler from \"errorhandler\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport path from \"path\";\nimport {BillController} from \"./controller/BillController\";\nimport {GroupController} from \"./controller/GroupController\";\nimport {ItemController} from \"./controller/ItemController\";\nimport {PageController} from \"./controller/PageController\";\nimport {UserController} from \"./controller/UserController\";\n\n/**\n * The server.\n *\n * @class Server\n */\nexport class Server {\n\n    /**\n     * Bootstrap the application.\n     *\n     * @class Server\n     * @method bootstrap\n     * @static\n     * @return {ng.auto.IInjectorService} Returns the newly created injector for this app.\n     */\n    public static bootstrap(): Server {\n        return new Server();\n    }\n\n    public app: express.Application;\n\n    public export = this.app;\n\n    /**\n     * Constructor.\n     *\n     * @class Server\n     * @constructor\n     */\n    constructor() {\n        // create expressjs application\n        this.app = express();\n\n        // configure application\n        this.config();\n\n        // add routes\n        this.routes();\n    }\n\n    /**\n     * Configure application\n     *\n     * @class Server\n     * @method config\n     */\n    public config() {\n        // add static paths\n        this.app.use(express.static(path.join(__dirname, \"../public\")));\n        this.app.use(express.static(path.join(__dirname, \"./scripts\")));\n        this.app.use(express.static(path.join(__dirname, \"./baseClasses\")));\n        this.app.use(express.static(path.join(__dirname, \"../node_modules/chart.js\")));\n\n        // add the images\n        this.app.use(express.static(\"assets\"));\n        this.app.use(express.static(\"assets/images\"));\n\n        // configure pug\n        this.app.set(\"views\", path.join(__dirname, \"../views\"));\n        this.app.set(\"view engine\", \"pug\");\n\n        // mount logger\n        this.app.use(logger(\"dev\"));\n\n        // mount json form parser\n        this.app.use(bodyParser.json());\n\n        // mount query string parser\n        this.app.use(bodyParser.urlencoded({\n            extended: true,\n        }));\n\n        // mount cookie parser middleware\n        this.app.use(cookieParser(\"SECRET_GOES_HERE\"));\n\n        // catch 404 and forward to error handler\n        this.app.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) => {\n            err.status = 404;\n            next(err);\n        });\n\n        // error handling\n        this.app.use(errorHandler());\n    }\n\n    /**\n     * Create and return Router.\n     *\n     * @class Server\n     * @method routes\n     * @return void\n     */\n    private routes() {\n        let router: express.Router;\n        router = express.Router();\n\n        PageController.create(router);\n        UserController.create(router);\n        ItemController.create(router);\n        BillController.create(router);\n        GroupController.create(router);\n\n        // use router middleware\n        this.app.use(router);\n\n    }\n\n}\n"]}